package com.example.studentsystem.entity;

import java.util.ArrayList;
import java.util.List;

public class FeeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fee
     *
     * @mbggenerated Sat Apr 30 00:56:34 BST 2022
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fee
     *
     * @mbggenerated Sat Apr 30 00:56:34 BST 2022
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table fee
     *
     * @mbggenerated Sat Apr 30 00:56:34 BST 2022
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fee
     *
     * @mbggenerated Sat Apr 30 00:56:34 BST 2022
     */
    public FeeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fee
     *
     * @mbggenerated Sat Apr 30 00:56:34 BST 2022
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fee
     *
     * @mbggenerated Sat Apr 30 00:56:34 BST 2022
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fee
     *
     * @mbggenerated Sat Apr 30 00:56:34 BST 2022
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fee
     *
     * @mbggenerated Sat Apr 30 00:56:34 BST 2022
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fee
     *
     * @mbggenerated Sat Apr 30 00:56:34 BST 2022
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fee
     *
     * @mbggenerated Sat Apr 30 00:56:34 BST 2022
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fee
     *
     * @mbggenerated Sat Apr 30 00:56:34 BST 2022
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fee
     *
     * @mbggenerated Sat Apr 30 00:56:34 BST 2022
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fee
     *
     * @mbggenerated Sat Apr 30 00:56:34 BST 2022
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table fee
     *
     * @mbggenerated Sat Apr 30 00:56:34 BST 2022
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fee
     *
     * @mbggenerated Sat Apr 30 00:56:34 BST 2022
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andFeeidIsNull() {
            addCriterion("feeID is null");
            return (Criteria) this;
        }

        public Criteria andFeeidIsNotNull() {
            addCriterion("feeID is not null");
            return (Criteria) this;
        }

        public Criteria andFeeidEqualTo(Integer value) {
            addCriterion("feeID =", value, "feeid");
            return (Criteria) this;
        }

        public Criteria andFeeidNotEqualTo(Integer value) {
            addCriterion("feeID <>", value, "feeid");
            return (Criteria) this;
        }

        public Criteria andFeeidGreaterThan(Integer value) {
            addCriterion("feeID >", value, "feeid");
            return (Criteria) this;
        }

        public Criteria andFeeidGreaterThanOrEqualTo(Integer value) {
            addCriterion("feeID >=", value, "feeid");
            return (Criteria) this;
        }

        public Criteria andFeeidLessThan(Integer value) {
            addCriterion("feeID <", value, "feeid");
            return (Criteria) this;
        }

        public Criteria andFeeidLessThanOrEqualTo(Integer value) {
            addCriterion("feeID <=", value, "feeid");
            return (Criteria) this;
        }

        public Criteria andFeeidIn(List<Integer> values) {
            addCriterion("feeID in", values, "feeid");
            return (Criteria) this;
        }

        public Criteria andFeeidNotIn(List<Integer> values) {
            addCriterion("feeID not in", values, "feeid");
            return (Criteria) this;
        }

        public Criteria andFeeidBetween(Integer value1, Integer value2) {
            addCriterion("feeID between", value1, value2, "feeid");
            return (Criteria) this;
        }

        public Criteria andFeeidNotBetween(Integer value1, Integer value2) {
            addCriterion("feeID not between", value1, value2, "feeid");
            return (Criteria) this;
        }

        public Criteria andFeeamountIsNull() {
            addCriterion("feeAmount is null");
            return (Criteria) this;
        }

        public Criteria andFeeamountIsNotNull() {
            addCriterion("feeAmount is not null");
            return (Criteria) this;
        }

        public Criteria andFeeamountEqualTo(Integer value) {
            addCriterion("feeAmount =", value, "feeamount");
            return (Criteria) this;
        }

        public Criteria andFeeamountNotEqualTo(Integer value) {
            addCriterion("feeAmount <>", value, "feeamount");
            return (Criteria) this;
        }

        public Criteria andFeeamountGreaterThan(Integer value) {
            addCriterion("feeAmount >", value, "feeamount");
            return (Criteria) this;
        }

        public Criteria andFeeamountGreaterThanOrEqualTo(Integer value) {
            addCriterion("feeAmount >=", value, "feeamount");
            return (Criteria) this;
        }

        public Criteria andFeeamountLessThan(Integer value) {
            addCriterion("feeAmount <", value, "feeamount");
            return (Criteria) this;
        }

        public Criteria andFeeamountLessThanOrEqualTo(Integer value) {
            addCriterion("feeAmount <=", value, "feeamount");
            return (Criteria) this;
        }

        public Criteria andFeeamountIn(List<Integer> values) {
            addCriterion("feeAmount in", values, "feeamount");
            return (Criteria) this;
        }

        public Criteria andFeeamountNotIn(List<Integer> values) {
            addCriterion("feeAmount not in", values, "feeamount");
            return (Criteria) this;
        }

        public Criteria andFeeamountBetween(Integer value1, Integer value2) {
            addCriterion("feeAmount between", value1, value2, "feeamount");
            return (Criteria) this;
        }

        public Criteria andFeeamountNotBetween(Integer value1, Integer value2) {
            addCriterion("feeAmount not between", value1, value2, "feeamount");
            return (Criteria) this;
        }

        public Criteria andFeepayerusernameIsNull() {
            addCriterion("feePayerUserName is null");
            return (Criteria) this;
        }

        public Criteria andFeepayerusernameIsNotNull() {
            addCriterion("feePayerUserName is not null");
            return (Criteria) this;
        }

        public Criteria andFeepayerusernameEqualTo(Integer value) {
            addCriterion("feePayerUserName =", value, "feepayerusername");
            return (Criteria) this;
        }

        public Criteria andFeepayerusernameNotEqualTo(Integer value) {
            addCriterion("feePayerUserName <>", value, "feepayerusername");
            return (Criteria) this;
        }

        public Criteria andFeepayerusernameGreaterThan(Integer value) {
            addCriterion("feePayerUserName >", value, "feepayerusername");
            return (Criteria) this;
        }

        public Criteria andFeepayerusernameGreaterThanOrEqualTo(Integer value) {
            addCriterion("feePayerUserName >=", value, "feepayerusername");
            return (Criteria) this;
        }

        public Criteria andFeepayerusernameLessThan(Integer value) {
            addCriterion("feePayerUserName <", value, "feepayerusername");
            return (Criteria) this;
        }

        public Criteria andFeepayerusernameLessThanOrEqualTo(Integer value) {
            addCriterion("feePayerUserName <=", value, "feepayerusername");
            return (Criteria) this;
        }

        public Criteria andFeepayerusernameIn(List<Integer> values) {
            addCriterion("feePayerUserName in", values, "feepayerusername");
            return (Criteria) this;
        }

        public Criteria andFeepayerusernameNotIn(List<Integer> values) {
            addCriterion("feePayerUserName not in", values, "feepayerusername");
            return (Criteria) this;
        }

        public Criteria andFeepayerusernameBetween(Integer value1, Integer value2) {
            addCriterion("feePayerUserName between", value1, value2, "feepayerusername");
            return (Criteria) this;
        }

        public Criteria andFeepayerusernameNotBetween(Integer value1, Integer value2) {
            addCriterion("feePayerUserName not between", value1, value2, "feepayerusername");
            return (Criteria) this;
        }

        public Criteria andFeestatusIsNull() {
            addCriterion("feeStatus is null");
            return (Criteria) this;
        }

        public Criteria andFeestatusIsNotNull() {
            addCriterion("feeStatus is not null");
            return (Criteria) this;
        }

        public Criteria andFeestatusEqualTo(Integer value) {
            addCriterion("feeStatus =", value, "feestatus");
            return (Criteria) this;
        }

        public Criteria andFeestatusNotEqualTo(Integer value) {
            addCriterion("feeStatus <>", value, "feestatus");
            return (Criteria) this;
        }

        public Criteria andFeestatusGreaterThan(Integer value) {
            addCriterion("feeStatus >", value, "feestatus");
            return (Criteria) this;
        }

        public Criteria andFeestatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("feeStatus >=", value, "feestatus");
            return (Criteria) this;
        }

        public Criteria andFeestatusLessThan(Integer value) {
            addCriterion("feeStatus <", value, "feestatus");
            return (Criteria) this;
        }

        public Criteria andFeestatusLessThanOrEqualTo(Integer value) {
            addCriterion("feeStatus <=", value, "feestatus");
            return (Criteria) this;
        }

        public Criteria andFeestatusIn(List<Integer> values) {
            addCriterion("feeStatus in", values, "feestatus");
            return (Criteria) this;
        }

        public Criteria andFeestatusNotIn(List<Integer> values) {
            addCriterion("feeStatus not in", values, "feestatus");
            return (Criteria) this;
        }

        public Criteria andFeestatusBetween(Integer value1, Integer value2) {
            addCriterion("feeStatus between", value1, value2, "feestatus");
            return (Criteria) this;
        }

        public Criteria andFeestatusNotBetween(Integer value1, Integer value2) {
            addCriterion("feeStatus not between", value1, value2, "feestatus");
            return (Criteria) this;
        }

        public Criteria andFeeonlineorofflineIsNull() {
            addCriterion("feeOnlineOrOffline is null");
            return (Criteria) this;
        }

        public Criteria andFeeonlineorofflineIsNotNull() {
            addCriterion("feeOnlineOrOffline is not null");
            return (Criteria) this;
        }

        public Criteria andFeeonlineorofflineEqualTo(Integer value) {
            addCriterion("feeOnlineOrOffline =", value, "feeonlineoroffline");
            return (Criteria) this;
        }

        public Criteria andFeeonlineorofflineNotEqualTo(Integer value) {
            addCriterion("feeOnlineOrOffline <>", value, "feeonlineoroffline");
            return (Criteria) this;
        }

        public Criteria andFeeonlineorofflineGreaterThan(Integer value) {
            addCriterion("feeOnlineOrOffline >", value, "feeonlineoroffline");
            return (Criteria) this;
        }

        public Criteria andFeeonlineorofflineGreaterThanOrEqualTo(Integer value) {
            addCriterion("feeOnlineOrOffline >=", value, "feeonlineoroffline");
            return (Criteria) this;
        }

        public Criteria andFeeonlineorofflineLessThan(Integer value) {
            addCriterion("feeOnlineOrOffline <", value, "feeonlineoroffline");
            return (Criteria) this;
        }

        public Criteria andFeeonlineorofflineLessThanOrEqualTo(Integer value) {
            addCriterion("feeOnlineOrOffline <=", value, "feeonlineoroffline");
            return (Criteria) this;
        }

        public Criteria andFeeonlineorofflineIn(List<Integer> values) {
            addCriterion("feeOnlineOrOffline in", values, "feeonlineoroffline");
            return (Criteria) this;
        }

        public Criteria andFeeonlineorofflineNotIn(List<Integer> values) {
            addCriterion("feeOnlineOrOffline not in", values, "feeonlineoroffline");
            return (Criteria) this;
        }

        public Criteria andFeeonlineorofflineBetween(Integer value1, Integer value2) {
            addCriterion("feeOnlineOrOffline between", value1, value2, "feeonlineoroffline");
            return (Criteria) this;
        }

        public Criteria andFeeonlineorofflineNotBetween(Integer value1, Integer value2) {
            addCriterion("feeOnlineOrOffline not between", value1, value2, "feeonlineoroffline");
            return (Criteria) this;
        }

        public Criteria andFeepaymentmethodIsNull() {
            addCriterion("feePaymentMethod is null");
            return (Criteria) this;
        }

        public Criteria andFeepaymentmethodIsNotNull() {
            addCriterion("feePaymentMethod is not null");
            return (Criteria) this;
        }

        public Criteria andFeepaymentmethodEqualTo(Integer value) {
            addCriterion("feePaymentMethod =", value, "feepaymentmethod");
            return (Criteria) this;
        }

        public Criteria andFeepaymentmethodNotEqualTo(Integer value) {
            addCriterion("feePaymentMethod <>", value, "feepaymentmethod");
            return (Criteria) this;
        }

        public Criteria andFeepaymentmethodGreaterThan(Integer value) {
            addCriterion("feePaymentMethod >", value, "feepaymentmethod");
            return (Criteria) this;
        }

        public Criteria andFeepaymentmethodGreaterThanOrEqualTo(Integer value) {
            addCriterion("feePaymentMethod >=", value, "feepaymentmethod");
            return (Criteria) this;
        }

        public Criteria andFeepaymentmethodLessThan(Integer value) {
            addCriterion("feePaymentMethod <", value, "feepaymentmethod");
            return (Criteria) this;
        }

        public Criteria andFeepaymentmethodLessThanOrEqualTo(Integer value) {
            addCriterion("feePaymentMethod <=", value, "feepaymentmethod");
            return (Criteria) this;
        }

        public Criteria andFeepaymentmethodIn(List<Integer> values) {
            addCriterion("feePaymentMethod in", values, "feepaymentmethod");
            return (Criteria) this;
        }

        public Criteria andFeepaymentmethodNotIn(List<Integer> values) {
            addCriterion("feePaymentMethod not in", values, "feepaymentmethod");
            return (Criteria) this;
        }

        public Criteria andFeepaymentmethodBetween(Integer value1, Integer value2) {
            addCriterion("feePaymentMethod between", value1, value2, "feepaymentmethod");
            return (Criteria) this;
        }

        public Criteria andFeepaymentmethodNotBetween(Integer value1, Integer value2) {
            addCriterion("feePaymentMethod not between", value1, value2, "feepaymentmethod");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fee
     *
     * @mbggenerated do_not_delete_during_merge Sat Apr 30 00:56:34 BST 2022
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table fee
     *
     * @mbggenerated Sat Apr 30 00:56:34 BST 2022
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}